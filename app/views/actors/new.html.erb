<h2>Add an actor:</h2>

<%#
  OK, the form_with is a function, and scope:, url:, and local:
  are named paramters. Ruby allows named parameters so that a function
  may take up to 10 different parameters, but many of those paramters
  can be left off and will use a default value. So, if you want to se
  only a few of those paramters, you would use the names of those
  paramters.

  When we say "scope: :actor", we are saying that this form will create
  the necessary data to create an actor. Here is what the POST created
  by this form will look like something like this:

{ "utf8"=>"âœ“",
 "authenticity_token"=>"/+7cLi6eAgYSwCg+GD1ItyU7/ok+F6aFHNnQNnjQYcwrtyZiBQyJuPZwh0lypnM9PkupUtGhHfZu9Aj2NKaA5g==",
 "actor"=>{ "name"=>"Tom Hanks" },
 "commit"=>"Save Actor"
}

The parameters in a POST basically form key-value pairs.
Notice that "actor" is a key that maps to a hash, and that map
has the key "name" which maps to "Tom Hanks". This is because
the user filled out the name text field with "Tom Hanks" and then
clicked submit.

The 'url: actors_path' part means that the URL that will handle the POST
is the url generated by the actors_path function. The actors_path function
is created when we tell config/routes.rb to create resources for actors.
It's one of the autogenerated helper functions.

%>

<%= form_with scope: :actor, url: actors_path, local: true do |form| %>
  <%= form.text_field :name %>
  <%= form.submit %>
<% end %>
